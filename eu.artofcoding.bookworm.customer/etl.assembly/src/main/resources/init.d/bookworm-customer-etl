#!/bin/bash
### BEGIN INIT INFO
# Provides:          bookworm-customer-etl
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start/Stop bookworm-customer-etl
### END INIT INFO
# chkconfig: 35 92 1

## Include some script files in order to set and export environmental variables
## as well as add the appropriate executables to $PATH.
[ -r /etc/profile.d/java.sh ] && . /etc/profile.d/java.sh

BOOKWORM_USER=${BOOKWORM_USER:-wbh}
BOOKWORM_HOME=${BOOKWORM_HOME:-/home/${BOOKWORM_USER}/app/${project.artifactId}-${project.version}}
export BOOKWORM_HOME
. /home/${BOOKWORM_USER}/app/${project.artifactId}.env
#CAMEL_ENCRYPTION_ALGORITHM=${CAMEL_ENCRYPTION_ALGORITHM:-PBEWithMD5AndTripleDES}
#export CAMEL_ENCRYPTION_ALGORITHM
#CAMEL_ENCRYPTION_PASSWORD=${CAMEL_ENCRYPTION_PASSWORD:-abc123}
#export CAMEL_ENCRYPTION_PASSWORD

case "$1" in
    start)
        echo "Starting ${assembly.for.artifactId}..."
        ATOMIKOS_PROPERTIES=${BOOKWORM_HOME}/conf/transactions.properties
        if [ -f ${ATOMIKOS_PROPERTIES} ]; then
            ATOMIKOS_OPTS="-Dcom.atomikos.icatch.file=${ATOMIKOS_PROPERTIES}"
        fi
        OPENJPA_OPTS="-D'openjpa.ManagedRuntime=invocation(TransactionManagerMethod=com.atomikos.icatch.jta.TransactionManagerImp.getTransactionManager)'"
        JAVA_OPTS="-Xms512m -Xmx512m ${ATOMIKOS_OPTS} ${OPENJPA_OPTS}"
        JAR=${assembly.for.artifactId}-${project.version}.jar
        LOGFILE="/var/log/${assembly.for.artifactId}.log"
        sudo touch ${LOGFILE}
        sudo chown ${BOOKWORM_USER} ${LOGFILE}
        LOGREDIR="2>${LOGFILE} 1>&2"
        sudo -Eu ${BOOKWORM_USER} sh -c "cd ${BOOKWORM_HOME} ; java ${JAVA_OPTS} -jar ${JAR} ${LOGREDIR} &"
    ;;
    stop)
        echo "Stopping ${assembly.for.artifactId}..."
        pid=$(ps ax | grep ${assembly.for.artifactId} | grep -v grep | awk '{print $1}')
        if [ x"${pid}" = "" ]; then
            echo "$0: Cannot find process id for ${assembly.for.artifactId}"
        elif [ -n "${pid}" ]; then
            kill ${pid}
        else
            echo "No pid"
        fi
    ;;
    encrypt)
        echo "*"
        echo "* WARNING"
        echo "*"
        echo "* YOU ARE ABOUT TO CHANGE ENCRYPTION OF IMPORTANT CONFIGURATION VALUES."
        echo "* THIS MAY BREAK EXISTING PREVIOUSLY ENCRYPTED VALUES AND MAY HARM YOUR SYSTEM."
        echo "*"
        echo "* PROCEED ONLY IF YOU ARE CERTAIN ABOUT WHAT YOU'RE DOING!"
        echo "*"
        read -p "* Go ahead (y/n)?" goahead
        if [ "${goahead}" = "y" ]
        then
            declare -A pvalue
            encrypted_properties=$(grep ENC ${BOOKWORM_HOME}/conf/etl.properties)
            for ep in ${encrypted_properties}
            do
                pname=${ep%=*}
                read -p "Enter value for ${pname}: " ${pvalue[pname]}
            done
            for k in ${!pvalue[@]}
            do
                pushd ${BOOKWORM_HOME}/lib 2>/dev/null
                encrypted_value=$(java -jar camel-jasypt-${version.org.apache.camel}.jar -c encrypt -p ${CAMEL_ENCRYPTION_PASSWORD} -a ${CAMEL_ENCRYPTION_ALGORITHM} -i ${pvalue[$k]})
                echo "${k}=ENC(${encrypted_value})"
                popd 2>/dev/null
            done
        fi
    ;;
    *)
        echo "Usage: $0 { start | stop | encrypt }"
        exit 1
    ;;
esac

exit 0
